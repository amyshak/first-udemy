// 1) Создать HTML страницу и подключить к ней файл скрипта

// 2) В файле скрипта создать 2 переменные (money и time), которые будут получать данные от пользователя:

// ·      Первая будет спрашивать "Ваш бюджет на месяц?"

// ·      Вторая "Введите дату в формате YYYY-MM-DD"
let money = +prompt('Ваш бюджет на месяц?', 'Бюджет');
let time = prompt('Введите дату в формате YYYY-MM-DD', 'YYYY-MM-DD');


// 3) Создать объект appData, который будет содержать такие данные:

// ·      бюджет (передаем сюда переменную из п.2)

// ·      данные времени - timeData (передаем сюда переменную из п.2)

// ·      объект с обязательными расходами - expenses (смотри пункт 4)
//        Hint: объект создается лишь пустыми скобками: expenses : {}

// ·      объект с необязательными расходами - optionalExpenses (оставляем пока пустым)

// ·      массив данных с доп. доходом - income (оставляем пока пустым)
//        Hint: массив создается лишь пустыми квадратными скобками: income : []

// ·      свойство savings (выставляем его как false)
let appData = {
    budget: money,
    timeData: time,
    expenses: {},
    optionalExpenses: {},
    income: [],
    savings: false

};
//  console.log(appData);
// 4) Задать пользователю по 2 раза вопросы:

//         “Введите обязательную статью расходов в этом месяце”

//         “Во сколько обойдется?”

//     Записать ответы в объект expenses в формате: 

//         expenses: {
//         “ответ на первый вопрос” : “ответ на второй вопрос”
//         }


// Hint: запись и получение данных из свойств происходит абсолютно одинаково. Либо через точку, либо через квадратные скобки. В предыдущем пункте мы с вами создали большой объект с множеством свойств. Внутри свойств тоже есть объекты. И вот последние мы можем заполнять.

// Давайте простой пример, который поможет вам в выполнении этого пункта:

// Есть переменная let a = 'first' и let b = 'second'; Обе содержат строки. И есть пустой объект let obj = {};

// Этот объект мы можем заполнить данными из переменных a и b. Для этого воспользуемся одним из синтаксисов:

// obj.a = b;

// или

// obj[a] = b;

// Результат:

//     obj = {
//        first: 'second'
//     }

// Мы передали содержимое переменных как свойство и значение во внутрь объекта.

// for (let i = 0; i < 2; i++) {
//     let a = prompt('Введите обязательную статью расходов в этом месяце', ''),
//         b = prompt('Во сколько обойдется?', '');
//     if (typeof (a) === 'string' && typeof (a) != null && typeof (b) != null &&
//         a != '' && b != '' && a.length < 50) {
//         console.log('done');
//         appData.expenses[a] = b;
//     } else {
//         console.log('something wrong')
//     }
// }
// OR 

// let i = 0;
// while (i < 2) {
//     let a = prompt('Введите обязательную статью расходов в этом месяце', ''),
//         b = prompt('Во сколько обойдется?', '');
//      i++;
//     if (typeof (a) === 'string' && typeof (a) != null && typeof (b) != null &&
//         a != '' && b != '' && a.length < 50) {
//         console.log('done');
//         appData.expenses[a] = b;
//     } else {
//         console.log('something wrong')
//     }
// }

let i = 0;
do {
    let a = prompt('Введите обязательную статью расходов в этом месяце', ''),
        b = prompt('Во сколько обойдется?', '');
     i++;
    if (typeof (a) === 'string' && typeof (a) != null && typeof (b) != null &&
        a != '' && b != '' && a.length < 50) {
        console.log('done');
        appData.expenses[a] = b;
    } else {
        console.log('something wrong')
    }
} while (i < 2);

// console.log(appData);

//         “”);
// 5) Вывести на экран пользователя бюджет на 1 день (брать месяц за 30 дней, использовать alert)

appData.moneyPerDay = appData.budget / 30;
alert('Ежедневный бюджет ' + appData.moneyPerDay);

if (appData.moneyPerDay < 100) {
    alert('Низкий уровень дохода');

} else if (appData.moneyPerDay > 100 && appData.moneyPerDay < 2000) {
    alert('Средний уровень дохода');
} else if (appData.moneyPerDay > 2000) {
    alert('Высокий уровень дохода');

}



// 6) Проверить, чтобы все работало без ошибок в консоли

// 7) Создать свой репозиторий на GitHub и поместить туда папку с первым заданием